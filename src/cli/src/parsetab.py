
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DAB273A414282DA553DBD326FE8C1910'
    
_lr_action_items = {'ECLOSE':([1,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,32,34,35,36,37,38,39,40,41,42,43,44,45,],[-3,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,-4,32,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'UP':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[11,11,11,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,11,11,11,11,11,11,11,11,11,11,11,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'EOPEN':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[2,2,2,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,2,2,2,2,2,2,2,2,2,2,2,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'NE':([14,],[22,]),'LIST':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[4,4,4,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,4,4,4,4,4,4,4,4,4,4,4,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'OCTNUMBER':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[5,5,5,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,5,5,5,5,5,5,5,5,5,5,5,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'GT':([14,],[25,]),'PIPE':([1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[-3,-8,-29,-14,-7,-13,20,-12,-11,-28,-6,-1,-27,-5,-15,-9,-4,-10,-2,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'INC':([14,],[27,]),'REGEX':([14,],[28,]),'HEXNUMBER':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[9,9,9,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,9,9,9,9,9,9,9,9,9,9,9,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'NUMBER':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[10,10,10,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,10,10,10,10,10,10,10,10,10,10,10,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'COMMA':([14,43,],[30,30,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,],[-3,-8,-29,-14,-7,-13,0,-12,-11,-28,-6,-1,-27,-5,-15,-9,-4,-10,-2,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'LE':([14,],[21,]),'DEC':([14,],[23,]),'ATOM':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[14,14,14,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,14,14,14,14,14,14,14,14,14,14,43,14,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'LT':([14,],[24,]),'GE':([14,],[26,]),'STRING':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[16,16,16,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,16,16,16,16,16,16,16,16,16,16,16,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'EQ':([14,],[29,]),'BINNUMBER':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,],[7,7,7,-8,-29,-14,-7,-13,-12,-11,-28,-6,-27,-5,-15,-9,7,7,7,7,7,7,7,7,7,7,7,-10,-22,-18,-25,-21,-19,-20,-24,-23,-17,-27,-26,-16,]),'ASSIGN':([14,],[31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal':([0,1,2,20,21,22,23,24,25,26,27,28,29,31,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'binary':([0,1,2,20,21,22,23,24,25,26,27,28,29,31,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expr':([0,1,2,20,21,22,23,24,25,26,27,28,29,31,],[1,1,1,1,34,35,36,37,38,39,40,41,42,45,]),'stmt':([0,],[8,]),'expansion':([0,1,2,20,21,22,23,24,25,26,27,28,29,31,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_list':([0,1,2,20,],[13,18,19,33,]),'symbol':([0,1,2,20,21,22,23,24,25,26,27,28,29,31,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'set':([0,1,2,20,21,22,23,24,25,26,27,28,29,30,31,],[17,17,17,17,17,17,17,17,17,17,17,17,17,44,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt","S'",1,None,None,None),
  ('stmt -> expr_list','stmt',1,'p_stmt','parser.py',170),
  ('stmt -> stmt PIPE expr_list','stmt',3,'p_stmt','parser.py',171),
  ('expr_list -> expr','expr_list',1,'p_expr_list','parser.py',182),
  ('expr_list -> expr expr_list','expr_list',2,'p_expr_list','parser.py',183),
  ('expr -> literal','expr',1,'p_expr','parser.py',194),
  ('expr -> symbol','expr',1,'p_expr','parser.py',195),
  ('expr -> binary','expr',1,'p_expr','parser.py',196),
  ('expr -> expansion','expr',1,'p_expr','parser.py',197),
  ('expr -> set','expr',1,'p_expr','parser.py',198),
  ('expansion -> EOPEN expr_list ECLOSE','expansion',3,'p_expansion','parser.py',205),
  ('literal -> NUMBER','literal',1,'p_literal','parser.py',212),
  ('literal -> HEXNUMBER','literal',1,'p_literal','parser.py',213),
  ('literal -> BINNUMBER','literal',1,'p_literal','parser.py',214),
  ('literal -> OCTNUMBER','literal',1,'p_literal','parser.py',215),
  ('literal -> STRING','literal',1,'p_literal','parser.py',216),
  ('binary -> ATOM ASSIGN expr','binary',3,'p_binary','parser.py',223),
  ('binary -> ATOM EQ expr','binary',3,'p_binary','parser.py',224),
  ('binary -> ATOM NE expr','binary',3,'p_binary','parser.py',225),
  ('binary -> ATOM GT expr','binary',3,'p_binary','parser.py',226),
  ('binary -> ATOM GE expr','binary',3,'p_binary','parser.py',227),
  ('binary -> ATOM LT expr','binary',3,'p_binary','parser.py',228),
  ('binary -> ATOM LE expr','binary',3,'p_binary','parser.py',229),
  ('binary -> ATOM REGEX expr','binary',3,'p_binary','parser.py',230),
  ('binary -> ATOM INC expr','binary',3,'p_binary','parser.py',231),
  ('binary -> ATOM DEC expr','binary',3,'p_binary','parser.py',232),
  ('set -> ATOM COMMA set','set',3,'p_set','parser.py',238),
  ('set -> ATOM','set',1,'p_set','parser.py',239),
  ('symbol -> UP','symbol',1,'p_symbol','parser.py',252),
  ('symbol -> LIST','symbol',1,'p_symbol','parser.py',253),
]
