Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> stmt
Rule 1     stmt -> expr_list
Rule 2     stmt -> stmt PIPE expr_list
Rule 3     expr_list -> expr
Rule 4     expr_list -> expr expr_list
Rule 5     expr -> literal
Rule 6     expr -> symbol
Rule 7     expr -> binary
Rule 8     expr -> expansion
Rule 9     expr -> set
Rule 10    expansion -> EOPEN expr_list ECLOSE
Rule 11    literal -> NUMBER
Rule 12    literal -> HEXNUMBER
Rule 13    literal -> BINNUMBER
Rule 14    literal -> OCTNUMBER
Rule 15    literal -> STRING
Rule 16    binary -> ATOM ASSIGN expr
Rule 17    binary -> ATOM EQ expr
Rule 18    binary -> ATOM NE expr
Rule 19    binary -> ATOM GT expr
Rule 20    binary -> ATOM GE expr
Rule 21    binary -> ATOM LT expr
Rule 22    binary -> ATOM LE expr
Rule 23    binary -> ATOM REGEX expr
Rule 24    binary -> ATOM INC expr
Rule 25    binary -> ATOM DEC expr
Rule 26    set -> ATOM COMMA set
Rule 27    set -> ATOM
Rule 28    symbol -> UP
Rule 29    symbol -> LIST

Terminals, with rules where they appear

ASSIGN               : 16
ATOM                 : 16 17 18 19 20 21 22 23 24 25 26 27
BINNUMBER            : 13
COMMA                : 26
DEC                  : 25
ECLOSE               : 10
EOPEN                : 10
EQ                   : 17
GE                   : 20
GT                   : 19
HEXNUMBER            : 12
INC                  : 24
LE                   : 22
LIST                 : 29
LT                   : 21
NE                   : 18
NUMBER               : 11
OCTNUMBER            : 14
PIPE                 : 2
REGEX                : 23
STRING               : 15
UP                   : 28
error                : 

Nonterminals, with rules where they appear

binary               : 7
expansion            : 8
expr                 : 3 4 16 17 18 19 20 21 22 23 24 25
expr_list            : 1 2 4 10
literal              : 5
set                  : 9 26
stmt                 : 2 0
symbol               : 6

Parsing method: LALR

state 0

    (0) S' -> . stmt
    (1) stmt -> . expr_list
    (2) stmt -> . stmt PIPE expr_list
    (3) expr_list -> . expr
    (4) expr_list -> . expr expr_list
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr_list                      shift and go to state 2
    symbol                         shift and go to state 9
    stmt                           shift and go to state 10
    literal                        shift and go to state 6
    expansion                      shift and go to state 12
    expr                           shift and go to state 15

state 1

    (9) expr -> set .

    NUMBER          reduce using rule 9 (expr -> set .)
    HEXNUMBER       reduce using rule 9 (expr -> set .)
    BINNUMBER       reduce using rule 9 (expr -> set .)
    OCTNUMBER       reduce using rule 9 (expr -> set .)
    STRING          reduce using rule 9 (expr -> set .)
    UP              reduce using rule 9 (expr -> set .)
    LIST            reduce using rule 9 (expr -> set .)
    ATOM            reduce using rule 9 (expr -> set .)
    EOPEN           reduce using rule 9 (expr -> set .)
    ECLOSE          reduce using rule 9 (expr -> set .)
    PIPE            reduce using rule 9 (expr -> set .)
    $end            reduce using rule 9 (expr -> set .)


state 2

    (1) stmt -> expr_list .

    PIPE            reduce using rule 1 (stmt -> expr_list .)
    $end            reduce using rule 1 (stmt -> expr_list .)


state 3

    (11) literal -> NUMBER .

    NUMBER          reduce using rule 11 (literal -> NUMBER .)
    HEXNUMBER       reduce using rule 11 (literal -> NUMBER .)
    BINNUMBER       reduce using rule 11 (literal -> NUMBER .)
    OCTNUMBER       reduce using rule 11 (literal -> NUMBER .)
    STRING          reduce using rule 11 (literal -> NUMBER .)
    UP              reduce using rule 11 (literal -> NUMBER .)
    LIST            reduce using rule 11 (literal -> NUMBER .)
    ATOM            reduce using rule 11 (literal -> NUMBER .)
    EOPEN           reduce using rule 11 (literal -> NUMBER .)
    PIPE            reduce using rule 11 (literal -> NUMBER .)
    $end            reduce using rule 11 (literal -> NUMBER .)
    ECLOSE          reduce using rule 11 (literal -> NUMBER .)


state 4

    (15) literal -> STRING .

    NUMBER          reduce using rule 15 (literal -> STRING .)
    HEXNUMBER       reduce using rule 15 (literal -> STRING .)
    BINNUMBER       reduce using rule 15 (literal -> STRING .)
    OCTNUMBER       reduce using rule 15 (literal -> STRING .)
    STRING          reduce using rule 15 (literal -> STRING .)
    UP              reduce using rule 15 (literal -> STRING .)
    LIST            reduce using rule 15 (literal -> STRING .)
    ATOM            reduce using rule 15 (literal -> STRING .)
    EOPEN           reduce using rule 15 (literal -> STRING .)
    PIPE            reduce using rule 15 (literal -> STRING .)
    $end            reduce using rule 15 (literal -> STRING .)
    ECLOSE          reduce using rule 15 (literal -> STRING .)


state 5

    (7) expr -> binary .

    NUMBER          reduce using rule 7 (expr -> binary .)
    HEXNUMBER       reduce using rule 7 (expr -> binary .)
    BINNUMBER       reduce using rule 7 (expr -> binary .)
    OCTNUMBER       reduce using rule 7 (expr -> binary .)
    STRING          reduce using rule 7 (expr -> binary .)
    UP              reduce using rule 7 (expr -> binary .)
    LIST            reduce using rule 7 (expr -> binary .)
    ATOM            reduce using rule 7 (expr -> binary .)
    EOPEN           reduce using rule 7 (expr -> binary .)
    ECLOSE          reduce using rule 7 (expr -> binary .)
    PIPE            reduce using rule 7 (expr -> binary .)
    $end            reduce using rule 7 (expr -> binary .)


state 6

    (5) expr -> literal .

    NUMBER          reduce using rule 5 (expr -> literal .)
    HEXNUMBER       reduce using rule 5 (expr -> literal .)
    BINNUMBER       reduce using rule 5 (expr -> literal .)
    OCTNUMBER       reduce using rule 5 (expr -> literal .)
    STRING          reduce using rule 5 (expr -> literal .)
    UP              reduce using rule 5 (expr -> literal .)
    LIST            reduce using rule 5 (expr -> literal .)
    ATOM            reduce using rule 5 (expr -> literal .)
    EOPEN           reduce using rule 5 (expr -> literal .)
    ECLOSE          reduce using rule 5 (expr -> literal .)
    PIPE            reduce using rule 5 (expr -> literal .)
    $end            reduce using rule 5 (expr -> literal .)


state 7

    (14) literal -> OCTNUMBER .

    NUMBER          reduce using rule 14 (literal -> OCTNUMBER .)
    HEXNUMBER       reduce using rule 14 (literal -> OCTNUMBER .)
    BINNUMBER       reduce using rule 14 (literal -> OCTNUMBER .)
    OCTNUMBER       reduce using rule 14 (literal -> OCTNUMBER .)
    STRING          reduce using rule 14 (literal -> OCTNUMBER .)
    UP              reduce using rule 14 (literal -> OCTNUMBER .)
    LIST            reduce using rule 14 (literal -> OCTNUMBER .)
    ATOM            reduce using rule 14 (literal -> OCTNUMBER .)
    EOPEN           reduce using rule 14 (literal -> OCTNUMBER .)
    PIPE            reduce using rule 14 (literal -> OCTNUMBER .)
    $end            reduce using rule 14 (literal -> OCTNUMBER .)
    ECLOSE          reduce using rule 14 (literal -> OCTNUMBER .)


state 8

    (13) literal -> BINNUMBER .

    NUMBER          reduce using rule 13 (literal -> BINNUMBER .)
    HEXNUMBER       reduce using rule 13 (literal -> BINNUMBER .)
    BINNUMBER       reduce using rule 13 (literal -> BINNUMBER .)
    OCTNUMBER       reduce using rule 13 (literal -> BINNUMBER .)
    STRING          reduce using rule 13 (literal -> BINNUMBER .)
    UP              reduce using rule 13 (literal -> BINNUMBER .)
    LIST            reduce using rule 13 (literal -> BINNUMBER .)
    ATOM            reduce using rule 13 (literal -> BINNUMBER .)
    EOPEN           reduce using rule 13 (literal -> BINNUMBER .)
    PIPE            reduce using rule 13 (literal -> BINNUMBER .)
    $end            reduce using rule 13 (literal -> BINNUMBER .)
    ECLOSE          reduce using rule 13 (literal -> BINNUMBER .)


state 9

    (6) expr -> symbol .

    NUMBER          reduce using rule 6 (expr -> symbol .)
    HEXNUMBER       reduce using rule 6 (expr -> symbol .)
    BINNUMBER       reduce using rule 6 (expr -> symbol .)
    OCTNUMBER       reduce using rule 6 (expr -> symbol .)
    STRING          reduce using rule 6 (expr -> symbol .)
    UP              reduce using rule 6 (expr -> symbol .)
    LIST            reduce using rule 6 (expr -> symbol .)
    ATOM            reduce using rule 6 (expr -> symbol .)
    EOPEN           reduce using rule 6 (expr -> symbol .)
    ECLOSE          reduce using rule 6 (expr -> symbol .)
    PIPE            reduce using rule 6 (expr -> symbol .)
    $end            reduce using rule 6 (expr -> symbol .)


state 10

    (0) S' -> stmt .
    (2) stmt -> stmt . PIPE expr_list

    PIPE            shift and go to state 18


state 11

    (10) expansion -> EOPEN . expr_list ECLOSE
    (3) expr_list -> . expr
    (4) expr_list -> . expr expr_list
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr_list                      shift and go to state 19
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6
    expr                           shift and go to state 15

state 12

    (8) expr -> expansion .

    NUMBER          reduce using rule 8 (expr -> expansion .)
    HEXNUMBER       reduce using rule 8 (expr -> expansion .)
    BINNUMBER       reduce using rule 8 (expr -> expansion .)
    OCTNUMBER       reduce using rule 8 (expr -> expansion .)
    STRING          reduce using rule 8 (expr -> expansion .)
    UP              reduce using rule 8 (expr -> expansion .)
    LIST            reduce using rule 8 (expr -> expansion .)
    ATOM            reduce using rule 8 (expr -> expansion .)
    EOPEN           reduce using rule 8 (expr -> expansion .)
    ECLOSE          reduce using rule 8 (expr -> expansion .)
    PIPE            reduce using rule 8 (expr -> expansion .)
    $end            reduce using rule 8 (expr -> expansion .)


state 13

    (16) binary -> ATOM . ASSIGN expr
    (17) binary -> ATOM . EQ expr
    (18) binary -> ATOM . NE expr
    (19) binary -> ATOM . GT expr
    (20) binary -> ATOM . GE expr
    (21) binary -> ATOM . LT expr
    (22) binary -> ATOM . LE expr
    (23) binary -> ATOM . REGEX expr
    (24) binary -> ATOM . INC expr
    (25) binary -> ATOM . DEC expr
    (26) set -> ATOM . COMMA set
    (27) set -> ATOM .

    ASSIGN          shift and go to state 29
    EQ              shift and go to state 28
    NE              shift and go to state 22
    GT              shift and go to state 21
    GE              shift and go to state 24
    LT              shift and go to state 23
    LE              shift and go to state 25
    REGEX           shift and go to state 20
    INC             shift and go to state 30
    DEC             shift and go to state 27
    COMMA           shift and go to state 26
    NUMBER          reduce using rule 27 (set -> ATOM .)
    HEXNUMBER       reduce using rule 27 (set -> ATOM .)
    BINNUMBER       reduce using rule 27 (set -> ATOM .)
    OCTNUMBER       reduce using rule 27 (set -> ATOM .)
    STRING          reduce using rule 27 (set -> ATOM .)
    UP              reduce using rule 27 (set -> ATOM .)
    LIST            reduce using rule 27 (set -> ATOM .)
    ATOM            reduce using rule 27 (set -> ATOM .)
    EOPEN           reduce using rule 27 (set -> ATOM .)
    PIPE            reduce using rule 27 (set -> ATOM .)
    $end            reduce using rule 27 (set -> ATOM .)
    ECLOSE          reduce using rule 27 (set -> ATOM .)


state 14

    (12) literal -> HEXNUMBER .

    NUMBER          reduce using rule 12 (literal -> HEXNUMBER .)
    HEXNUMBER       reduce using rule 12 (literal -> HEXNUMBER .)
    BINNUMBER       reduce using rule 12 (literal -> HEXNUMBER .)
    OCTNUMBER       reduce using rule 12 (literal -> HEXNUMBER .)
    STRING          reduce using rule 12 (literal -> HEXNUMBER .)
    UP              reduce using rule 12 (literal -> HEXNUMBER .)
    LIST            reduce using rule 12 (literal -> HEXNUMBER .)
    ATOM            reduce using rule 12 (literal -> HEXNUMBER .)
    EOPEN           reduce using rule 12 (literal -> HEXNUMBER .)
    PIPE            reduce using rule 12 (literal -> HEXNUMBER .)
    $end            reduce using rule 12 (literal -> HEXNUMBER .)
    ECLOSE          reduce using rule 12 (literal -> HEXNUMBER .)


state 15

    (3) expr_list -> expr .
    (4) expr_list -> expr . expr_list
    (3) expr_list -> . expr
    (4) expr_list -> . expr expr_list
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    ECLOSE          reduce using rule 3 (expr_list -> expr .)
    PIPE            reduce using rule 3 (expr_list -> expr .)
    $end            reduce using rule 3 (expr_list -> expr .)
    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 15
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6
    expr_list                      shift and go to state 31

state 16

    (29) symbol -> LIST .

    NUMBER          reduce using rule 29 (symbol -> LIST .)
    HEXNUMBER       reduce using rule 29 (symbol -> LIST .)
    BINNUMBER       reduce using rule 29 (symbol -> LIST .)
    OCTNUMBER       reduce using rule 29 (symbol -> LIST .)
    STRING          reduce using rule 29 (symbol -> LIST .)
    UP              reduce using rule 29 (symbol -> LIST .)
    LIST            reduce using rule 29 (symbol -> LIST .)
    ATOM            reduce using rule 29 (symbol -> LIST .)
    EOPEN           reduce using rule 29 (symbol -> LIST .)
    PIPE            reduce using rule 29 (symbol -> LIST .)
    $end            reduce using rule 29 (symbol -> LIST .)
    ECLOSE          reduce using rule 29 (symbol -> LIST .)


state 17

    (28) symbol -> UP .

    NUMBER          reduce using rule 28 (symbol -> UP .)
    HEXNUMBER       reduce using rule 28 (symbol -> UP .)
    BINNUMBER       reduce using rule 28 (symbol -> UP .)
    OCTNUMBER       reduce using rule 28 (symbol -> UP .)
    STRING          reduce using rule 28 (symbol -> UP .)
    UP              reduce using rule 28 (symbol -> UP .)
    LIST            reduce using rule 28 (symbol -> UP .)
    ATOM            reduce using rule 28 (symbol -> UP .)
    EOPEN           reduce using rule 28 (symbol -> UP .)
    PIPE            reduce using rule 28 (symbol -> UP .)
    $end            reduce using rule 28 (symbol -> UP .)
    ECLOSE          reduce using rule 28 (symbol -> UP .)


state 18

    (2) stmt -> stmt PIPE . expr_list
    (3) expr_list -> . expr
    (4) expr_list -> . expr expr_list
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr_list                      shift and go to state 32
    symbol                         shift and go to state 9
    literal                        shift and go to state 6
    expansion                      shift and go to state 12
    expr                           shift and go to state 15

state 19

    (10) expansion -> EOPEN expr_list . ECLOSE

    ECLOSE          shift and go to state 33


state 20

    (23) binary -> ATOM REGEX . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 34
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 21

    (19) binary -> ATOM GT . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 35
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 22

    (18) binary -> ATOM NE . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 36
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 23

    (21) binary -> ATOM LT . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 37
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 24

    (20) binary -> ATOM GE . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 38
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 25

    (22) binary -> ATOM LE . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 39
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 26

    (26) set -> ATOM COMMA . set
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    ATOM            shift and go to state 41

    set                            shift and go to state 40

state 27

    (25) binary -> ATOM DEC . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 42
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 28

    (17) binary -> ATOM EQ . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 43
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 29

    (16) binary -> ATOM ASSIGN . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 44
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 30

    (24) binary -> ATOM INC . expr
    (5) expr -> . literal
    (6) expr -> . symbol
    (7) expr -> . binary
    (8) expr -> . expansion
    (9) expr -> . set
    (11) literal -> . NUMBER
    (12) literal -> . HEXNUMBER
    (13) literal -> . BINNUMBER
    (14) literal -> . OCTNUMBER
    (15) literal -> . STRING
    (28) symbol -> . UP
    (29) symbol -> . LIST
    (16) binary -> . ATOM ASSIGN expr
    (17) binary -> . ATOM EQ expr
    (18) binary -> . ATOM NE expr
    (19) binary -> . ATOM GT expr
    (20) binary -> . ATOM GE expr
    (21) binary -> . ATOM LT expr
    (22) binary -> . ATOM LE expr
    (23) binary -> . ATOM REGEX expr
    (24) binary -> . ATOM INC expr
    (25) binary -> . ATOM DEC expr
    (10) expansion -> . EOPEN expr_list ECLOSE
    (26) set -> . ATOM COMMA set
    (27) set -> . ATOM

    NUMBER          shift and go to state 3
    HEXNUMBER       shift and go to state 14
    BINNUMBER       shift and go to state 8
    OCTNUMBER       shift and go to state 7
    STRING          shift and go to state 4
    UP              shift and go to state 17
    LIST            shift and go to state 16
    ATOM            shift and go to state 13
    EOPEN           shift and go to state 11

    binary                         shift and go to state 5
    set                            shift and go to state 1
    expr                           shift and go to state 45
    symbol                         shift and go to state 9
    expansion                      shift and go to state 12
    literal                        shift and go to state 6

state 31

    (4) expr_list -> expr expr_list .

    ECLOSE          reduce using rule 4 (expr_list -> expr expr_list .)
    PIPE            reduce using rule 4 (expr_list -> expr expr_list .)
    $end            reduce using rule 4 (expr_list -> expr expr_list .)


state 32

    (2) stmt -> stmt PIPE expr_list .

    PIPE            reduce using rule 2 (stmt -> stmt PIPE expr_list .)
    $end            reduce using rule 2 (stmt -> stmt PIPE expr_list .)


state 33

    (10) expansion -> EOPEN expr_list ECLOSE .

    NUMBER          reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    HEXNUMBER       reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    BINNUMBER       reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    OCTNUMBER       reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    STRING          reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    UP              reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    LIST            reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    ATOM            reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    EOPEN           reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    PIPE            reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    $end            reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)
    ECLOSE          reduce using rule 10 (expansion -> EOPEN expr_list ECLOSE .)


state 34

    (23) binary -> ATOM REGEX expr .

    NUMBER          reduce using rule 23 (binary -> ATOM REGEX expr .)
    HEXNUMBER       reduce using rule 23 (binary -> ATOM REGEX expr .)
    BINNUMBER       reduce using rule 23 (binary -> ATOM REGEX expr .)
    OCTNUMBER       reduce using rule 23 (binary -> ATOM REGEX expr .)
    STRING          reduce using rule 23 (binary -> ATOM REGEX expr .)
    UP              reduce using rule 23 (binary -> ATOM REGEX expr .)
    LIST            reduce using rule 23 (binary -> ATOM REGEX expr .)
    ATOM            reduce using rule 23 (binary -> ATOM REGEX expr .)
    EOPEN           reduce using rule 23 (binary -> ATOM REGEX expr .)
    PIPE            reduce using rule 23 (binary -> ATOM REGEX expr .)
    $end            reduce using rule 23 (binary -> ATOM REGEX expr .)
    ECLOSE          reduce using rule 23 (binary -> ATOM REGEX expr .)


state 35

    (19) binary -> ATOM GT expr .

    NUMBER          reduce using rule 19 (binary -> ATOM GT expr .)
    HEXNUMBER       reduce using rule 19 (binary -> ATOM GT expr .)
    BINNUMBER       reduce using rule 19 (binary -> ATOM GT expr .)
    OCTNUMBER       reduce using rule 19 (binary -> ATOM GT expr .)
    STRING          reduce using rule 19 (binary -> ATOM GT expr .)
    UP              reduce using rule 19 (binary -> ATOM GT expr .)
    LIST            reduce using rule 19 (binary -> ATOM GT expr .)
    ATOM            reduce using rule 19 (binary -> ATOM GT expr .)
    EOPEN           reduce using rule 19 (binary -> ATOM GT expr .)
    PIPE            reduce using rule 19 (binary -> ATOM GT expr .)
    $end            reduce using rule 19 (binary -> ATOM GT expr .)
    ECLOSE          reduce using rule 19 (binary -> ATOM GT expr .)


state 36

    (18) binary -> ATOM NE expr .

    NUMBER          reduce using rule 18 (binary -> ATOM NE expr .)
    HEXNUMBER       reduce using rule 18 (binary -> ATOM NE expr .)
    BINNUMBER       reduce using rule 18 (binary -> ATOM NE expr .)
    OCTNUMBER       reduce using rule 18 (binary -> ATOM NE expr .)
    STRING          reduce using rule 18 (binary -> ATOM NE expr .)
    UP              reduce using rule 18 (binary -> ATOM NE expr .)
    LIST            reduce using rule 18 (binary -> ATOM NE expr .)
    ATOM            reduce using rule 18 (binary -> ATOM NE expr .)
    EOPEN           reduce using rule 18 (binary -> ATOM NE expr .)
    PIPE            reduce using rule 18 (binary -> ATOM NE expr .)
    $end            reduce using rule 18 (binary -> ATOM NE expr .)
    ECLOSE          reduce using rule 18 (binary -> ATOM NE expr .)


state 37

    (21) binary -> ATOM LT expr .

    NUMBER          reduce using rule 21 (binary -> ATOM LT expr .)
    HEXNUMBER       reduce using rule 21 (binary -> ATOM LT expr .)
    BINNUMBER       reduce using rule 21 (binary -> ATOM LT expr .)
    OCTNUMBER       reduce using rule 21 (binary -> ATOM LT expr .)
    STRING          reduce using rule 21 (binary -> ATOM LT expr .)
    UP              reduce using rule 21 (binary -> ATOM LT expr .)
    LIST            reduce using rule 21 (binary -> ATOM LT expr .)
    ATOM            reduce using rule 21 (binary -> ATOM LT expr .)
    EOPEN           reduce using rule 21 (binary -> ATOM LT expr .)
    PIPE            reduce using rule 21 (binary -> ATOM LT expr .)
    $end            reduce using rule 21 (binary -> ATOM LT expr .)
    ECLOSE          reduce using rule 21 (binary -> ATOM LT expr .)


state 38

    (20) binary -> ATOM GE expr .

    NUMBER          reduce using rule 20 (binary -> ATOM GE expr .)
    HEXNUMBER       reduce using rule 20 (binary -> ATOM GE expr .)
    BINNUMBER       reduce using rule 20 (binary -> ATOM GE expr .)
    OCTNUMBER       reduce using rule 20 (binary -> ATOM GE expr .)
    STRING          reduce using rule 20 (binary -> ATOM GE expr .)
    UP              reduce using rule 20 (binary -> ATOM GE expr .)
    LIST            reduce using rule 20 (binary -> ATOM GE expr .)
    ATOM            reduce using rule 20 (binary -> ATOM GE expr .)
    EOPEN           reduce using rule 20 (binary -> ATOM GE expr .)
    PIPE            reduce using rule 20 (binary -> ATOM GE expr .)
    $end            reduce using rule 20 (binary -> ATOM GE expr .)
    ECLOSE          reduce using rule 20 (binary -> ATOM GE expr .)


state 39

    (22) binary -> ATOM LE expr .

    NUMBER          reduce using rule 22 (binary -> ATOM LE expr .)
    HEXNUMBER       reduce using rule 22 (binary -> ATOM LE expr .)
    BINNUMBER       reduce using rule 22 (binary -> ATOM LE expr .)
    OCTNUMBER       reduce using rule 22 (binary -> ATOM LE expr .)
    STRING          reduce using rule 22 (binary -> ATOM LE expr .)
    UP              reduce using rule 22 (binary -> ATOM LE expr .)
    LIST            reduce using rule 22 (binary -> ATOM LE expr .)
    ATOM            reduce using rule 22 (binary -> ATOM LE expr .)
    EOPEN           reduce using rule 22 (binary -> ATOM LE expr .)
    PIPE            reduce using rule 22 (binary -> ATOM LE expr .)
    $end            reduce using rule 22 (binary -> ATOM LE expr .)
    ECLOSE          reduce using rule 22 (binary -> ATOM LE expr .)


state 40

    (26) set -> ATOM COMMA set .

    NUMBER          reduce using rule 26 (set -> ATOM COMMA set .)
    HEXNUMBER       reduce using rule 26 (set -> ATOM COMMA set .)
    BINNUMBER       reduce using rule 26 (set -> ATOM COMMA set .)
    OCTNUMBER       reduce using rule 26 (set -> ATOM COMMA set .)
    STRING          reduce using rule 26 (set -> ATOM COMMA set .)
    UP              reduce using rule 26 (set -> ATOM COMMA set .)
    LIST            reduce using rule 26 (set -> ATOM COMMA set .)
    ATOM            reduce using rule 26 (set -> ATOM COMMA set .)
    EOPEN           reduce using rule 26 (set -> ATOM COMMA set .)
    PIPE            reduce using rule 26 (set -> ATOM COMMA set .)
    $end            reduce using rule 26 (set -> ATOM COMMA set .)
    ECLOSE          reduce using rule 26 (set -> ATOM COMMA set .)


state 41

    (26) set -> ATOM . COMMA set
    (27) set -> ATOM .

    COMMA           shift and go to state 26
    NUMBER          reduce using rule 27 (set -> ATOM .)
    HEXNUMBER       reduce using rule 27 (set -> ATOM .)
    BINNUMBER       reduce using rule 27 (set -> ATOM .)
    OCTNUMBER       reduce using rule 27 (set -> ATOM .)
    STRING          reduce using rule 27 (set -> ATOM .)
    UP              reduce using rule 27 (set -> ATOM .)
    LIST            reduce using rule 27 (set -> ATOM .)
    ATOM            reduce using rule 27 (set -> ATOM .)
    EOPEN           reduce using rule 27 (set -> ATOM .)
    PIPE            reduce using rule 27 (set -> ATOM .)
    $end            reduce using rule 27 (set -> ATOM .)
    ECLOSE          reduce using rule 27 (set -> ATOM .)


state 42

    (25) binary -> ATOM DEC expr .

    NUMBER          reduce using rule 25 (binary -> ATOM DEC expr .)
    HEXNUMBER       reduce using rule 25 (binary -> ATOM DEC expr .)
    BINNUMBER       reduce using rule 25 (binary -> ATOM DEC expr .)
    OCTNUMBER       reduce using rule 25 (binary -> ATOM DEC expr .)
    STRING          reduce using rule 25 (binary -> ATOM DEC expr .)
    UP              reduce using rule 25 (binary -> ATOM DEC expr .)
    LIST            reduce using rule 25 (binary -> ATOM DEC expr .)
    ATOM            reduce using rule 25 (binary -> ATOM DEC expr .)
    EOPEN           reduce using rule 25 (binary -> ATOM DEC expr .)
    PIPE            reduce using rule 25 (binary -> ATOM DEC expr .)
    $end            reduce using rule 25 (binary -> ATOM DEC expr .)
    ECLOSE          reduce using rule 25 (binary -> ATOM DEC expr .)


state 43

    (17) binary -> ATOM EQ expr .

    NUMBER          reduce using rule 17 (binary -> ATOM EQ expr .)
    HEXNUMBER       reduce using rule 17 (binary -> ATOM EQ expr .)
    BINNUMBER       reduce using rule 17 (binary -> ATOM EQ expr .)
    OCTNUMBER       reduce using rule 17 (binary -> ATOM EQ expr .)
    STRING          reduce using rule 17 (binary -> ATOM EQ expr .)
    UP              reduce using rule 17 (binary -> ATOM EQ expr .)
    LIST            reduce using rule 17 (binary -> ATOM EQ expr .)
    ATOM            reduce using rule 17 (binary -> ATOM EQ expr .)
    EOPEN           reduce using rule 17 (binary -> ATOM EQ expr .)
    PIPE            reduce using rule 17 (binary -> ATOM EQ expr .)
    $end            reduce using rule 17 (binary -> ATOM EQ expr .)
    ECLOSE          reduce using rule 17 (binary -> ATOM EQ expr .)


state 44

    (16) binary -> ATOM ASSIGN expr .

    NUMBER          reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    HEXNUMBER       reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    BINNUMBER       reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    OCTNUMBER       reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    STRING          reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    UP              reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    LIST            reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    ATOM            reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    EOPEN           reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    PIPE            reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    $end            reduce using rule 16 (binary -> ATOM ASSIGN expr .)
    ECLOSE          reduce using rule 16 (binary -> ATOM ASSIGN expr .)


state 45

    (24) binary -> ATOM INC expr .

    NUMBER          reduce using rule 24 (binary -> ATOM INC expr .)
    HEXNUMBER       reduce using rule 24 (binary -> ATOM INC expr .)
    BINNUMBER       reduce using rule 24 (binary -> ATOM INC expr .)
    OCTNUMBER       reduce using rule 24 (binary -> ATOM INC expr .)
    STRING          reduce using rule 24 (binary -> ATOM INC expr .)
    UP              reduce using rule 24 (binary -> ATOM INC expr .)
    LIST            reduce using rule 24 (binary -> ATOM INC expr .)
    ATOM            reduce using rule 24 (binary -> ATOM INC expr .)
    EOPEN           reduce using rule 24 (binary -> ATOM INC expr .)
    PIPE            reduce using rule 24 (binary -> ATOM INC expr .)
    $end            reduce using rule 24 (binary -> ATOM INC expr .)
    ECLOSE          reduce using rule 24 (binary -> ATOM INC expr .)

