#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-sshd
# REQUIRE: FILESYSTEMS
# BEFORE: sshd

. /etc/rc.subr

#
# TODO: this is really just a place holder for the moment....
#
generate_sshd()
{
    local IFS=\|
    local f="toggleSSH tcpport rootlogin passwordauth tcpfwd compression options"
    local toggleSSH tcpport rootlogin passwordauth tcpfwd compression options
    local cmd sf cfg
    sf=$(echo $f | sed -e 's/ /, /g')
    cfg=/etc/ssh/sshd_config
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
	"SELECT $sf FROM freenas_servicesssh ORDER BY -id LIMIT 1" | \
	while read toggleSSH tcpport rootlogin passwordauth tcpfwd compression options; do
	    cat > $cfg <<EOF
SyslogFacility LOCAL3
Protocol 2
UseDNS no
Subsystem       sftp    /usr/libexec/sftp-server
ChallengeResponseAuthentication no
EOF
	    if [ $tcpport -gt 0 ]; then
		echo "Port $tcpport" >> $cfg
	    fi
	    if [ $rootlogin = 1 ]; then
		echo "PermitRootLogin yes" >> $cfg
	    fi
	    if [ $tcpfwd = 1 ]; then
		echo "AllowTcpForwarding yes" >> $cfg
	    else
		echo "AllowTcpForwarding no" >> $cfg
	    fi
	    if [ $compression = 1 ]; then
		echo "Compression yes" >> $cfg
	    fi
	    if [ $passwordauth = 1 ]; then
		echo "PasswordAuthentication yes" >> $cfg
	    fi
	    pubkeyauth=1		# Missing in schema
	    if [ $pubkeyauth = 1 ]; then
		echo "PubkeyAuthentication yes" >> $cfg
	    fi
	    if [ -n "$options" ]; then
		echo "$options" >> $cfg
	    fi
    done
}

name="ix-sshd"
start_cmd='generate_sshd'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
