#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-afpd
# REQUIRE: FILESYSTEMS
# BEFORE: netatalk

. /etc/rc.subr

# Defaults
afpd_enable=${afpd_enable:-"NO"}
afpd_config=${afpd_config:-"/etc/afpd.conf"}
afpd_avdefault=${afpd_avdefault:-"/etc/AppleVolumes.default"}
afpd_avsystem=${afpd_avsystem:-"/etc/AppleVolumes.system"}

# If $1 == 1, return $2, otherwise return nothing
bool_on()
{
    if [ $1 -gt 0 ]; then
	echo -n $2
    fi
}

# If $1 == 1, return $2, otherwise return nothing
bool_off()
{
    if [ $1 -eq 0 ]; then
	echo -n $2
    fi
}

# Return "on" for '1' and "off" for '0'
on_off()
{
    case $1 in
	0) echo "off";;
	1) echo "on";;
    esac
}

generate_afpd_config()
{
    local IFS=\|
    local f="name guest local ddp"
    eval local $f
    local sf=$(echo $f | sed -e 's/ /, /g')

    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
        "SELECT $sf FROM freenas_servicesafp ORDER BY -id LIMIT 1" | \
    while eval read $f; do
	: ${name:=-}
	cat <<EOF
"${name}" $(bool_off ${ddp} "-noddp") -nosavepassword \\
-defaultvol ${afpd_avdefault} -systemvol ${afpd_avsystem} \\
-uservol -uampath /etc/uams -guestname "ftp" \\
EOF
	if [ ${guest} -eq 1 -a ${local} -eq 0 ]; then
	    echo "-uamlist uams_guest.so"
	elif [ ${local} -eq 1 ]; then
	    echo "-uamlist uams_guest.so,uams_clrtxt.so,uams_dhx.so,uams_randnum.so"
	else
	    echo
	fi
    done
}

generate_av_system()
{
    local IFS=\|
    local vol_name

    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
        "SELECT vol_name FROM freenas_volume" | \
    while read vol_name; do
	cat <<EOF
"/mnt/${vol_name}" "${vol_name}" options:usedots allow:@admin
EOF
    done
}

generate_av_default()
{
    local IFS=\|
    local f="as_name as_comment mountpoint sharepw sharecharset allow deny as_ro as_rw diskdiscovery discoverymode dbpath cachecnid crlf mswindows noadouble nodev nofileid nohex prodos nostat upriv"
    eval local $f
    local sf=$(echo $f | sed -e 's/ /, /g')
    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
        "SELECT $sf FROM freenas_appleshare AS aps LEFT OUTER JOIN freenas_mountpoint AS mp ON aps.as_path_id = mp.volumeid_id ORDER BY -aps.id LIMIT 1" | \
    while eval read $f; do
	echo "# ${as_comment}"
	echo -n "\"${mountpoint}\" \"${as_name}\""
	echo -n "${sharepw:+ password:${sharepw}}"
#	echo -n "${casefold:+ casefold:${casefold}}"
	echo -n "${sharecharsets:+ sharecharsets:${sharecharsets}}"
	echo -n " options:usedots"
	for _i in cachecnid crlf mswindows noadouble nodev nofileid nohex prodos nostat upriv; do
	    bool_on $(eval echo \$${_i}) ",${_i}"
        done
	if [ ${diskdiscovery} -eq 1 -a ${discoverymode} = "time-machine" ]; then
	    echo -n ",tm"
	fi
	echo -n "${allow:+ allow:${allow}}"
	echo -n "${deny:+ deny:${deny}}"
	echo -n "${as_ro:+ rolist:${as_ro}}"
	echo -n "${as_rw:+ rwlist:${as_rw}}"
	echo -n "${dbpath:+ dbpath:\"${dbpath}\"}"
#		-i "string-length(cnidscheme) > 0" -v "concat('cnidscheme:',cnidscheme,' ')" -b \
	echo ""
    done
}

generate_afpd()
{
    generate_afpd_config > ${afpd_config}
    generate_av_system > ${afpd_avsystem}
    generate_av_default > ${afpd_avdefault}
}

name="ix-afpd"
start_cmd='generate_afpd'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
